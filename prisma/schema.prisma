// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

// generator erd {
//   provider = "prisma-erd-generator"
//   output   = "../ERD.svg"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @unique @default(autoincrement())
  email       String   @unique
  name        String
  lastname    String
  password    String
  dateOfBirth DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cart        Cart?

  @@map("users")
}

model Product {
  id           Int           @unique @default(autoincrement())
  title        String        @unique
  description  String
  price        Float
  brand        String?
  category     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  cartProducts CartProduct[]

  @@map("products")
}

model CartProduct {
  cartId    Int
  productId Int
  quantity  Int @default(1)

  cart    Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([cartId, productId])
  @@map("cart_products")
}

model Cart {
  id        Int      @unique @default(autoincrement())
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id])
  cartProducts CartProduct[]

  @@map("carts")
}
